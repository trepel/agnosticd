---
# NOTE: Use 'command' module instead of ansible iam module because it doesn't work well with boto profiles.
- name: Check if user already exists
  command: >-
    aws --profile {{ account_profile }}
    iam list-users --query 'Users[].UserName'
  register: _listusers
  changed_when: false

- name: Create new IAM user
  when: account_user not in _listusers.stdout|from_json|list
  command: >-
    aws --profile {{ account_profile }}
    iam create-user --user-name {{ account_user }}
  register: _iamuser

- name: Get access keys for user
  command: >-
    aws --profile {{ account_profile }}
    iam list-access-keys --user-name {{ account_user }}
    --query 'AccessKeyMetadata[].AccessKeyId'
  register: _listkeys
  changed_when: false

- when: _listkeys.stdout|from_json|list|length > 1
  name: Delete all access keys
  command: >-
    aws --profile {{ account_profile }}
    iam delete-access-key
    --user-name {{ account_user }}
    --access-key-id {{ _key }}
  loop: "{{_listkeys.stdout|from_json|list }}"
  loop_control:
    loop_var: _key

- name: Create new IAM access keys
  command: >-
    aws --profile {{ account_profile }}
    iam create-access-key --user-name {{ account_user }}
  register: _iamuserkey

- name: Save user access key and secret
  set_fact:
    account_user_access_key: "{{ _iamuserkey.stdout|from_json|json_query('AccessKey.AccessKeyId') }}"
    account_user_secret_access_key: "{{ _iamuserkey.stdout|from_json|json_query('AccessKey.SecretAccessKey') }}"

- debug:
    msg: "{{ account_user_access_key }} / {{ account_user_secret_access_key }}"
